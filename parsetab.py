
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\nu\x84U>0W\xb8t\x9a&\xc0\t\x12\x8c\x1a'
    
_lr_action_items = {'FAALWAYS':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'AND':([10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,],[21,-16,-15,21,21,21,21,21,21,21,21,-14,21,-6,21,21,21,]),'EXIALWAYS':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'EXIUNTIL':([10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,],[23,-16,-15,23,23,23,23,23,23,-13,23,-14,-4,-6,23,23,-5,]),'NAME':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'THEN':([10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,],[22,-16,-15,22,22,22,22,22,22,22,22,-14,22,22,22,22,22,]),'EXINEXT':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'FAEVENTUALLY':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'EXIEVENTUALLY':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'FAUNTIL':([10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,],[24,-16,-15,24,24,24,24,24,24,-13,24,-14,-4,-6,24,24,-5,]),'LPAREN':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'NOT':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'RPAREN':([11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,],[-16,-15,-8,26,-7,-12,-9,-11,-13,-10,-14,-4,-6,-2,-3,-5,]),'FANEXT':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'TRUE':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'OR':([10,11,12,13,14,15,16,17,18,19,20,26,27,28,29,30,31,],[25,-16,-15,25,25,25,25,25,25,25,25,-14,25,-6,25,25,25,]),'$end':([7,10,11,12,13,15,16,17,18,19,20,26,27,28,29,30,31,],[0,-1,-16,-15,-8,-7,-12,-9,-11,-13,-10,-14,-4,-6,-2,-3,-5,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,1,2,3,4,5,6,8,9,21,22,23,24,25,],[10,13,14,15,16,17,18,19,20,27,28,29,30,31,]),'statement':([0,],[7,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',76),
  ('expression -> expression EXIUNTIL expression','expression',3,'p_expression_exiuntil','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',80),
  ('expression -> expression FAUNTIL expression','expression',3,'p_expression_fauntil','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',84),
  ('expression -> expression AND expression','expression',3,'p_expression_and','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',88),
  ('expression -> expression OR expression','expression',3,'p_expression_or','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',92),
  ('expression -> expression THEN expression','expression',3,'p_expression_then','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',96),
  ('expression -> EXINEXT expression','expression',2,'p_expression_exinext','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',100),
  ('expression -> EXIALWAYS expression','expression',2,'p_expression_exialways','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',104),
  ('expression -> EXIEVENTUALLY expression','expression',2,'p_expression_exieventually','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',108),
  ('expression -> FANEXT expression','expression',2,'p_expression_fanext','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',112),
  ('expression -> FAALWAYS expression','expression',2,'p_expression_faalways','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',116),
  ('expression -> FAEVENTUALLY expression','expression',2,'p_expression_faeventually','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',120),
  ('expression -> NOT expression','expression',2,'p_expression_not','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',124),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',128),
  ('expression -> NAME','expression',1,'p_expression_name','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',132),
  ('expression -> TRUE','expression',1,'p_expression_true','C:\\Users\\Juan\\MC\\ctl\\parserCTL.py',136),
]
